name: Build and Deploy Code

on: [push,pull_request]

jobs:
  build:
    environment:
      name: Test
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repository
        uses: actions/checkout@v3
      - name: Install python3 and pip3
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install requirements
        run: pip3 install -r requirements.txt
      - name: install pytest and run tests
        run: |
          pip3 install pytest
          pytest -v
     # - name: Login to Docker Hub
     #   uses: docker/login-action@v1
     #   with:
     #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
     #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
     # - name: Set up Docker Buildx
     #   uses: docker/setup-buildx-action@v1
     # - name: Build and push
     #   uses: docker/build-push-action@v2
     #   with:
     #     context: ./
     #     file: ./Dockerfile
     #     builder: ${{ steps.buildx.outputs.name }}
     #     push: true
     #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-practice:latest
     #     cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-practice:buildcache
     #     cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-practice:buildcache,mode=max
  deploy:
    environment:
      name: Test
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "fastapi-tomiwa" #Must be unique in Heroku
          heroku_email: "${{secrets.EMAIL}}"




